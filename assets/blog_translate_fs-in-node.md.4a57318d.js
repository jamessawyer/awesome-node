import{_ as s,c as a,o as n,N as l}from"./chunks/framework.9bcd12c4.js";const C=JSON.parse('{"title":"FS in Node","description":"","frontmatter":{"title":"FS in Node"},"headers":[],"relativePath":"blog/translate/fs-in-node.md","lastUpdated":1679304702000}'),p={name:"blog/translate/fs-in-node.md"},o=l(`<p>这篇文章主要涵盖2个部分：</p><ol><li>Node fs APIs 概览</li><li>使用这些APIs执行不同任务的小技巧（代码片段）</li></ol><p>本文关注shell脚本，这也是为什么我们只针对文本数据。</p><p>目录：</p><nav class="table-of-contents"><ul><li><a href="#_1️⃣-⭐-fs-apis的概念-模式和规范">1️⃣ ⭐ fs APIs的概念，模式和规范</a><ul><li><a href="#_1-1-函数不同的风格">1.1 函数不同的风格</a></li><li><a href="#_1-2-⭐-访问文件的方式">1.2 ⭐ 访问文件的方式</a></li><li><a href="#_1-3-⭐-函数名前缀">1.3 ⭐ 函数名前缀</a></li><li><a href="#_1-4-重要的类">1.4 重要的类</a></li></ul></li><li><a href="#_2️⃣-读和写文件">2️⃣ 读和写文件</a><ul><li><a href="#_2-1-同步读文件为单一字符串-可选-拆分为行">2.1 同步读文件为单一字符串（可选：拆分为行）</a></li><li><a href="#_2-2-⭐-通过流读取文件-一行接一行">2.2 ⭐ 通过流读取文件，一行接一行</a></li><li><a href="#_2-3-单一字符串同步写入文件">2.3 单一字符串同步写入文件</a></li><li><a href="#_2-4-追加字符串到文件中-同步的">2.4 追加字符串到文件中（同步的）</a></li><li><a href="#_2-5-使用流写入多个字符串到文件中">2.5 使用流写入多个字符串到文件中</a></li><li><a href="#_2-6-通过流追加多个字符串到文件中-异步的">2.6 通过流追加多个字符串到文件中（异步的）</a></li></ul></li><li><a href="#_3️⃣-跨平台处理行分隔符">3️⃣ 跨平台处理行分隔符</a><ul><li><a href="#_3-1-读取行分隔符">3.1 读取行分隔符</a></li><li><a href="#_3-2-写行分割符">3.2 写行分割符</a></li></ul></li><li><a href="#_4️⃣-⭐-遍历和创建目录">4️⃣ ⭐ 遍历和创建目录</a><ul><li><a href="#_4-1-遍历一个目录">4.1 遍历一个目录</a></li><li><a href="#_4-2-创建目录-mkdir-mkdir-p">4.2 创建目录（mkdir, mkdir -p）</a></li><li><a href="#_4-3-确保父目录存在">4.3 确保父目录存在</a></li><li><a href="#_4-4-创建临时目录">4.4 创建临时目录</a></li></ul></li><li><a href="#_5️⃣-拷贝-重命名-移动文件或者目录">5️⃣ 拷贝，重命名，移动文件或者目录</a><ul><li><a href="#_5-1-拷贝文件或目录">5.1 拷贝文件或目录</a></li><li><a href="#_5-2-重命名或移动文件或文件夹">5.2 重命名或移动文件或文件夹</a></li></ul></li><li><a href="#_6️⃣-移除文件或目录">6️⃣ 移除文件或目录</a><ul><li><a href="#_6-1-移除文件和任意目录-shell-rm-rm-r">6.1 移除文件和任意目录（shell: rm, rm -r）</a></li><li><a href="#_6-2-移除空目录-shell-rmdir">6.2 移除空目录（shell: rmdir）</a></li><li><a href="#_6-3-清空目录">6.3 清空目录</a></li><li><a href="#_6-4-trash库">6.4 trash库</a></li></ul></li><li><a href="#_7️⃣-读和改变文件系统条目">7️⃣ 读和改变文件系统条目</a><ul><li><a href="#_7-1-⭐-检测文件或目录是否存在">7.1 ⭐ 检测文件或目录是否存在</a></li><li><a href="#_7-2-检测文件stats-是否是路径-创建时间-等">7.2 检测文件stats：是否是路径？创建时间？等</a></li><li><a href="#_7-3-改变文件特性-权限-拥有者-组-时间戳">7.3 改变文件特性：权限，拥有者，组，时间戳</a></li></ul></li><li><a href="#_8️⃣-操作链接-links">8️⃣ 操作链接（Links）</a></li><li><a href="#_9️⃣-进一步阅读">9️⃣ 进一步阅读</a></li></ul></nav><h2 id="_1️⃣-⭐-fs-apis的概念-模式和规范" tabindex="-1">1️⃣ ⭐ fs APIs的概念，模式和规范 <a class="header-anchor" href="#_1️⃣-⭐-fs-apis的概念-模式和规范" aria-label="Permalink to &quot;1️⃣ ⭐ fs APIs的概念，模式和规范&quot;">​</a></h2><p>本节，我们使用下面2个引入：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">as</span><span style="color:#A6ACCD;"> fs </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">node:fs</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">as</span><span style="color:#A6ACCD;"> fsPromises </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">node:fs/promises</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span></code></pre></div><h3 id="_1-1-函数不同的风格" tabindex="-1">1.1 函数不同的风格 <a class="header-anchor" href="#_1-1-函数不同的风格" aria-label="Permalink to &quot;1.1 函数不同的风格&quot;">​</a></h3><p>📚Node fs APIs有3种不同的风格：</p><ol><li>1种同步风格，比如 <ul><li><a href="https://nodejs.org/api/fs.html#fsreadfilesyncpath-options" target="_blank" rel="noreferrer">fs.readFileSync(path, options?): string|Buffer</a></li></ul></li><li>2种异步风格 <ol><li><strong>基于回调函数</strong> 的异步风格，比如 <ul><li><a href="https://nodejs.org/api/fs.html#fsreadfilepath-options-callback" target="_blank" rel="noreferrer">fs.readFile(path, options?, callback): void</a></li></ul></li><li><strong>基于Promises函数</strong> 的异步风格，比如： <ul><li><a href="https://nodejs.org/api/fs.html#fspromisesreadfilepath-options" target="_blank" rel="noreferrer">fsPromises.readFile(path, options?): Promise&lt;string|Buffer&gt;</a></li></ul></li></ol></li></ol><p>🚀上面3个例子，展示了功能相同函数的命名规范：</p><ul><li>基于回调的函数有一个基础名：<code>fs.readFile()</code></li><li>基于Promise的版本名字相同，但是在不同模块中：<code>fsPromises.readFile()</code></li><li>同步版本的名字为，基础名字 + <code>Sync</code> 后缀：<code>fs.readFileSync()</code></li></ul><p>下面进一步看看这3种风格。</p><h4 id="_1-1-1-同步函数" tabindex="-1">1.1.1 同步函数 <a class="header-anchor" href="#_1-1-1-同步函数" aria-label="Permalink to &quot;1.1.1 同步函数&quot;">​</a></h4><p>同步函数最简单 - 它们立即返回值，出现异常则抛出错误：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">as</span><span style="color:#A6ACCD;"> fs </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">node:fs</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">try</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">result</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">fs</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">readFileSync</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">/etc/passwd</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> encoding</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">utf-8</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">result</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">catch</span><span style="color:#A6ACCD;"> (err) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">err</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>本文主要使用这种风格，因为它们很方便，并且很适合shell脚本😎。</p><h4 id="_1-1-2-基于promise的函数" tabindex="-1">1.1.2 基于Promise的函数 <a class="header-anchor" href="#_1-1-2-基于promise的函数" aria-label="Permalink to &quot;1.1.2 基于Promise的函数&quot;">​</a></h4><p>返回 <a href="https://exploringjs.com/impatient-js/ch_promises.html" target="_blank" rel="noreferrer">Promises</a>，完成则返回结果或reject错误:</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight has-highlighted-lines"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">as</span><span style="color:#A6ACCD;"> fsPromises </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">node:fs/promises</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// A</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">try</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line highlighted"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">result</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">fsPromises</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">readFile</span><span style="color:#F07178;">(</span></span>
<span class="line highlighted"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">/etc/passwd</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> encoding</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">utf-8</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line highlighted"><span style="color:#F07178;">  )</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">result</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">catch</span><span style="color:#A6ACCD;"> (err) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">err</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>注意 <code>A</code> 行处的模块指示符：基于Promise的API位于不同的模块中。</p><h4 id="_1-1-3-基于callback的函数" tabindex="-1">1.1.3 基于Callback的函数 <a class="header-anchor" href="#_1-1-3-基于callback的函数" aria-label="Permalink to &quot;1.1.3 基于Callback的函数&quot;">​</a></h4><p>基于回调的函数将结果和错误传递给callbacks，它是最后一个参数：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight has-highlighted-lines"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">as</span><span style="color:#A6ACCD;"> fs </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">node:fs</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">fs</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">readFile</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">/etc/passwd</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">encoding</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">utf-8</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">},</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">err</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">result</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">// error-first callback</span></span>
<span class="line highlighted"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">err</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line highlighted"><span style="color:#F07178;">      </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">error</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">err</span><span style="color:#F07178;">)</span></span>
<span class="line highlighted"><span style="color:#F07178;">      </span><span style="color:#89DDFF;font-style:italic;">return</span></span>
<span class="line highlighted"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line highlighted"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">result</span><span style="color:#F07178;">)</span></span>
<span class="line highlighted"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div><p>本文不会使用这种风格。<a href="https://nodejs.org/en/knowledge/getting-started/control-flow/what-are-callbacks/" target="_blank" rel="noreferrer">Node文档中有具体介绍</a></p><h3 id="_1-2-⭐-访问文件的方式" tabindex="-1">1.2 ⭐ 访问文件的方式 <a class="header-anchor" href="#_1-2-⭐-访问文件的方式" aria-label="Permalink to &quot;1.2 ⭐ 访问文件的方式&quot;">​</a></h3><ol><li>我们可以通过字符串读或写文件的所有内容</li><li>我们可以以流的方式打开或者写入，一次性更小块的处理文件。流只允许顺序访问</li><li>我们可以使用文件描述符（<code>file descriptors</code>） 或 文件句柄（<code>FileHandles</code>），通过一个类似于流的API来获得顺序访问和随机访问 <ul><li><a href="https://nodejs.org/api/fs.html#file-descriptors_1" target="_blank" rel="noreferrer">文件描述符</a> 是表示文件的整数。它们通过如下函数管理（下面只展示同步版本，当然也有基于回调的版本 - <code>fs.open()</code> 等）： <ul><li><code>fs.openSync(path, flags?, mode?)</code> 打开一个指定路径的文件的文件描述符，然后将其返回</li><li><code>fs.closeSync(fd)</code> 关闭文件描述符</li><li><code>fs.fchmodSync(fd, mode)</code></li><li><code>fs.fchownSync(fd, uid, gid)</code></li><li><code>fs.fdatasyncSync(fd)</code></li><li><code>fs.fstatSync(fd, options?)</code></li><li><code>fs.fsyncSync(fd)</code></li><li><code>fs.ftruncateSync(fd, len?)</code></li><li><code>fs.futimesSync(fd, atime, mtime)</code></li></ul></li><li><strong>只有同步版本和基于回调的API才使用文件描述符，基于Promise版本API有更好的抽象 - <a href="https://nodejs.org/api/fs.html#class-filehandle" target="_blank" rel="noreferrer">class FileHandle</a></strong> - 它基于文件描述符🤩。通过 <code>fsPromises.open()</code> 创建的实例，各种操作通过方法的形式提供（而不是函数）： <ul><li><code>fileHandle.close()</code></li><li><code>fileHandle.chmod(mode)</code></li><li><code>fileHandle.chown(uid, gid)</code></li><li>...</li></ul></li></ul></li></ol><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>🚨 本文不使用第3种形式，我们的目的只使用第1,2种方式就足够了。</p></div><h3 id="_1-3-⭐-函数名前缀" tabindex="-1">1.3 ⭐ 函数名前缀 <a class="header-anchor" href="#_1-3-⭐-函数名前缀" aria-label="Permalink to &quot;1.3 ⭐ 函数名前缀&quot;">​</a></h3><h4 id="_1-3-1-前缀-l-符号链接" tabindex="-1">1.3.1 前缀 <code>l</code> : 符号链接 <a class="header-anchor" href="#_1-3-1-前缀-l-符号链接" aria-label="Permalink to &quot;1.3.1 前缀 \`l\` : 符号链接&quot;">​</a></h4><p>以 <code>l</code> 开头的函数通常是对符号链接进行操作的：</p><ul><li><code>fs.lchmodSync()</code> + <code>fs.lchmod()</code> + <code>fsPromises.lchmod()</code></li><li><code>fs.lchownSync()</code> + <code>fs.lchown()</code> + <code>fsPromises.lchown()</code></li><li><code>fs.lutimeSync()</code> + <code>fs.lutimes()</code> + <code>fsPromises.lutimes()</code></li><li>...等等</li></ul><h4 id="_1-3-2-前缀-f-文件描述符" tabindex="-1">1.3.2 前缀 <code>f</code>：文件描述符 <a class="header-anchor" href="#_1-3-2-前缀-f-文件描述符" aria-label="Permalink to &quot;1.3.2 前缀 \`f\`：文件描述符&quot;">​</a></h4><p>以 <code>f</code> 开头的函数通常用于管理文件描述符：</p><ul><li><code>fs.fchmodSync()</code> + <code>fs.fchmod()</code></li><li><code>fs.fchownSync()</code> + <code>fs.fchown()</code></li><li><code>fs.fstatSync()</code> + <code>fs.fstate()</code></li><li>...等等</li></ul><h3 id="_1-4-重要的类" tabindex="-1">1.4 重要的类 <a class="header-anchor" href="#_1-4-重要的类" aria-label="Permalink to &quot;1.4 重要的类&quot;">​</a></h3><p>有几个类在Node文件系统API中扮演着举足轻重的角色。</p><h4 id="_1-4-1-⭐-urls-字符串文件系统的另一种选择" tabindex="-1">1.4.1 ⭐ URLs : 字符串文件系统的另一种选择 <a class="header-anchor" href="#_1-4-1-⭐-urls-字符串文件系统的另一种选择" aria-label="Permalink to &quot;1.4.1 ⭐ URLs : 字符串文件系统的另一种选择&quot;">​</a></h4><p>🚀🚀 每当某个Node函数接收以字符串形式的文件系统路径（行 <code>A</code>），通常也可以接收一个 <code>URL</code> 实例（行 <code>B</code>）:</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight has-highlighted-lines"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">as</span><span style="color:#A6ACCD;"> fs </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">node:fs</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">assert</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">equal</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">  fs</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">readFileSync</span><span style="color:#A6ACCD;">(</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">/tmp/text-file.txt</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">encoding</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">utf-8</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">},</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// A</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Text Content</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">  )</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">assert</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">equal</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">  fs</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">readFileSync</span><span style="color:#A6ACCD;">(</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">URL</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">file:///tmp/text-file.txt</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">encoding</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">utf-8</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">},</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// B</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Text Content</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">  )</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div><p>手动转换路径和 <code>file:</code> URLs看起来很容易，但是却有很多弊端：百分号编码或解码，Windows磁盘盘符等。相反，最好使用下面2个函数：</p><ol><li><a href="https://nodejs.org/api/url.html#urlpathtofileurlpath" target="_blank" rel="noreferrer">url.pathToFileURL()</a></li><li><a href="https://nodejs.org/api/url.html#urlpathtofileurlpath" target="_blank" rel="noreferrer">url.fileURLToPath()</a></li></ol><div class="info custom-block"><p class="custom-block-title">INFO</p><p>本文并不会使用文件URLs.</p></div><h4 id="_1-4-2-buffers" tabindex="-1">1.4.2 Buffers <a class="header-anchor" href="#_1-4-2-buffers" aria-label="Permalink to &quot;1.4.2 Buffers&quot;">​</a></h4><p>Node中的 <a href="https://nodejs.org/api/buffer.html" target="_blank" rel="noreferrer">Buffer</a> 表示 <em>固定长度的字节序列</em>。它是 <code>Uint8Array</code> (一种 <a href="https://exploringjs.com/impatient-js/ch_typed-arrays.html" target="_blank" rel="noreferrer">TypedArray</a>)。Buffers主要处理二进制文件（<code>binary files</code>），因此本文并不会使用它。</p><p>👩‍🏫 当Node接收一个Buffer时，它也接收一个Uint8Array。因此，<strong>鉴于Uint8Arrays是跨平台的，而Buffers并不是，因此更偏向选择Uint8Arrays</strong>。</p><p>Buffers能完成Uint8Arrays不能完成的一件事：以多种格式编码和解码文本😎。如果我们以Uint8Arrays编码或解码UTF-8，我们可以使用 <a href="https://developer.mozilla.org/en-US/docs/Web/API/TextEncoder" target="_blank" rel="noreferrer">TextEncoder</a> 或 <a href="https://developer.mozilla.org/en-US/docs/Web/API/TextDecoder" target="_blank" rel="noreferrer">TextDecoder</a> 类。这些类在大多数JS平台都可以使用：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">TextEncoder</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">encode</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">café</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// Uint8Array.of(99, 97, 102, 195, 169)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">TextDecoder</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">decode</span><span style="color:#A6ACCD;">(Uint8Array</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">of</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">99</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">97</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">102</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">195</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">169</span><span style="color:#A6ACCD;">))</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// &#39;café&#39;</span></span>
<span class="line"></span></code></pre></div><h4 id="_1-4-3-node-js-streams" tabindex="-1">1.4.3 Node.js Streams <a class="header-anchor" href="#_1-4-3-node-js-streams" aria-label="Permalink to &quot;1.4.3 Node.js Streams&quot;">​</a></h4><p>有些函数接收或返回原生的Node.js流：</p><ul><li><code>stream.Readable</code> 是Node中用于可读的流。模块 <code>node:fs</code> 使用 <code>fs.ReadStream</code>，它是一个子类</li><li><code>stream.Writable</code> 是Node中用于写入的流。模块 <code>node:fs</code> 使用 <code>fs.WriteStream</code>，它是一个子类</li></ul><p>除了使用原生流，我们还可以在Node中使用跨平台的 <code>web stream</code></p><ul><li><a href="https://2ality.com/2022/06/web-streams-nodejs.html" target="_blank" rel="noreferrer">Using web streams on Node.js - 2ality</a></li></ul><h2 id="_2️⃣-读和写文件" tabindex="-1">2️⃣ 读和写文件 <a class="header-anchor" href="#_2️⃣-读和写文件" aria-label="Permalink to &quot;2️⃣ 读和写文件&quot;">​</a></h2><h3 id="_2-1-同步读文件为单一字符串-可选-拆分为行" tabindex="-1">2.1 同步读文件为单一字符串（可选：拆分为行） <a class="header-anchor" href="#_2-1-同步读文件为单一字符串-可选-拆分为行" aria-label="Permalink to &quot;2.1 同步读文件为单一字符串（可选：拆分为行）&quot;">​</a></h3><p><a href="https://nodejs.org/api/fs.html#fsreadfilesyncpath-options" target="_blank" rel="noreferrer">fs.readFileSync</a> 同步读取 <code>filePath</code> 处的文件为单一字符串：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">as</span><span style="color:#A6ACCD;"> fs </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">node:fs</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">assert</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">equal</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">  fs</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">readFileSync</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">text-file.txt</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">encoding</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">utf-8</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">there</span><span style="color:#A6ACCD;">\\r\\n</span><span style="color:#C3E88D;">are</span><span style="color:#A6ACCD;">\\n</span><span style="color:#C3E88D;">multiple</span><span style="color:#A6ACCD;">\\n</span><span style="color:#C3E88D;">lines</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div><p>这种方式的优点和缺点（对比流）：</p><ul><li>😋优点：使用简单，并且同步。适用于大多数场景</li><li>😥缺点：不适用于大文件：在我们处理数据前，必须将其完全读取到内存中</li></ul><p>下面看看拆分字符串，以行的方式读取。</p><h4 id="_2-1-1-拆分行-并且不包含行分隔符" tabindex="-1">2.1.1 拆分行，并且不包含行分隔符 <a class="header-anchor" href="#_2-1-1-拆分行-并且不包含行分隔符" aria-label="Permalink to &quot;2.1.1 拆分行，并且不包含行分隔符&quot;">​</a></h4><p>下面代码拆分字符串为行的同时，移除行分隔符。适用于Unix和Windows行分隔符：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight has-highlighted-lines"><code><span class="line highlighted"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> RE_SPLIT_EOL </span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">/</span><span style="color:#C3E88D;">\\r</span><span style="color:#89DDFF;">?</span><span style="color:#C3E88D;">\\n</span><span style="color:#89DDFF;">/</span></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">splitLines</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">str</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">str</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">split</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">RE_SPLIT_EOL</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">assert</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">deepEqual</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">splitLines</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">there</span><span style="color:#A6ACCD;">\\r\\n</span><span style="color:#C3E88D;">are</span><span style="color:#A6ACCD;">\\n</span><span style="color:#C3E88D;">multiple</span><span style="color:#A6ACCD;">\\n</span><span style="color:#C3E88D;">lines</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  [</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">there</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">are</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">multiple</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">lines</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div><p><code>EOL</code> 表示 <code>end of line</code>。我们同时接收Unix行分割符（<code>\\n</code>）和 Windows行分隔符（<code>\\r\\n</code>）。</p><h4 id="_2-1-2-拆分行-并且保留行分隔符" tabindex="-1">2.1.2 拆分行，并且保留行分隔符 <a class="header-anchor" href="#_2-1-2-拆分行-并且保留行分隔符" aria-label="Permalink to &quot;2.1.2 拆分行，并且保留行分隔符&quot;">​</a></h4><p>下面代码将字符串拆分为行，并且保留行分隔符。同时适用于Unix和Windows行分隔符：、</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight has-highlighted-lines"><code><span class="line highlighted"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> RE_SPLIT_AFTER_EOL </span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">/(?&lt;=</span><span style="color:#C3E88D;">\\r</span><span style="color:#89DDFF;">?</span><span style="color:#C3E88D;">\\n</span><span style="color:#89DDFF;">)/</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// A</span></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">splitLines</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">str</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">str</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">split</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">RE_SPLIT_EOL</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">assert</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">deepEqual</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">splitLinesWithEols</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">there</span><span style="color:#A6ACCD;">\\r\\n</span><span style="color:#C3E88D;">are</span><span style="color:#A6ACCD;">\\n</span><span style="color:#C3E88D;">multiple</span><span style="color:#A6ACCD;">\\n</span><span style="color:#C3E88D;">lines</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  [</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">there</span><span style="color:#A6ACCD;">\\r\\n</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">are</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">multiple</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">lines</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">assert</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">deepEqual</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">splitLinesWithEols</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">first</span><span style="color:#A6ACCD;">\\n\\n</span><span style="color:#C3E88D;">third</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  [</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">first</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">third</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">assert</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">deepEqual</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">splitLinesWithEols</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">EOL at the end</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  [</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">EOL at the end</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">assert</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">deepEqual</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">splitLinesWithEols</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  [</span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#A6ACCD;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div><p>A行处使用了 <a href="https://jamessawyer.github.io/deep-javascript-cn/6/Regular-expressions-lookaround-assertions-by-example.html#_1%EF%B8%8F%E2%83%A3-%E2%AD%90-cheatsheet-%E7%8E%AF%E8%A7%86%E6%96%AD%E8%A8%80" target="_blank" rel="noreferrer">后行断言</a> 正则表达式。它匹配后面跟着的模式 <code>\\r?\\n</code>，但它自身不会被捕获。因此，它不会删除将输入字符串分割成的字符串片段之间的任何内容。</p><p>对于不支持后续断言的引擎（<a href="https://caniuse.com/js-regexp-lookbehind" target="_blank" rel="noreferrer">caniuse - lookbehind</a>），可以使用下面方案：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">splitLinesWithEols</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">str</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">str</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">length</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">===</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> [</span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#F07178;">]</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">lines</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> []</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">prevEnd</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">while</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">prevEnd</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">str</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">length</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 搜索 \`\\n\`，意味着我们也能找到 \`\\r\\n\`</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newlineIndex</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">str</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">indexOf</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">prevEnd</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 如果存在新行，它被包含在改行中</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">end</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newlineIndex</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">?</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">str</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">length</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newlineIndex</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">lines</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">push</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">str</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">slice</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">prevEnd</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">end</span><span style="color:#F07178;">))</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">prevEnd</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">end</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">lines</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>这个方案简单，但是太冗长。</p><p>2个版本都同时接收Unix和Windows行分隔符，更多可查看：<a href="https://2ality.com/2022/06/nodejs-file-system.html#handling-line-terminators-across-platforms" target="_blank" rel="noreferrer">Handling line terminators across platforms</a></p><h3 id="_2-2-⭐-通过流读取文件-一行接一行" tabindex="-1">2.2 ⭐ 通过流读取文件，一行接一行 <a class="header-anchor" href="#_2-2-⭐-通过流读取文件-一行接一行" aria-label="Permalink to &quot;2.2 ⭐ 通过流读取文件，一行接一行&quot;">​</a></h3><p>我们也可以通过流的方式读取文本文件：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight has-highlighted-lines"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">as</span><span style="color:#A6ACCD;"> fs </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">node:fs</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Readable</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">node:stream</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> nodeReadable </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> fs</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">createReadStream</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">text-file.txt</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">encoding</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">utf-8</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span></span>
<span class="line highlighted"><span style="color:#676E95;font-style:italic;">// 💡 web跨平台流</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> webReadableStream </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Readable</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toWeb</span><span style="color:#A6ACCD;">(nodeReadable)</span></span>
<span class="line"></span>
<span class="line highlighted"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> lineStream </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> webReadableStream</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">pipeThrough</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">ChunksToLinesStream</span><span style="color:#A6ACCD;">())</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> (</span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> line </span><span style="color:#89DDFF;">of</span><span style="color:#A6ACCD;"> lineStream) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">line</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 输出</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// &#39;there\\r\\n&#39;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// &#39;are\\n&#39;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// &#39;multiple\\n&#39;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// &#39;lines&#39;</span></span>
<span class="line"></span></code></pre></div><p>🚀🚀我们使用了下面外部函数：</p><ol><li><a href="https://nodejs.org/api/fs.html#fscreatereadstreampath-options" target="_blank" rel="noreferrer">fs.createReadStream(filePath, options?)</a> 创建Node.js流（<code>stream.Readable</code> 实例）</li><li><a href="https://nodejs.org/api/stream.html#streamreadabletowebstreamreadable" target="_blank" rel="noreferrer">stream.Readable.toWeb(streamReadable)</a> 将Node可读流转换为web流（<code>ReadableStream</code> 实例）</li><li><code>ChunksToLinesStream</code> 在 <a href="https://2ality.com/2022/06/web-streams-nodejs.html#example%3A-transforming-a-stream-of-arbitrary-chunks-to-a-stream-of-lines" target="_blank" rel="noreferrer">Using web streams on Node.js</a> 中已解释。<strong>块（<code>Chunks</code>）是由流产生的数据片段</strong>。如果我们有一个流，它是任意长度的字符串块，通过 <code>ChunksToLinesStream</code> 管道，我们将获得一个块是行的流。</li></ol><p>Web流是 <a href="https://exploringjs.com/impatient-js/ch_async-iteration.html" target="_blank" rel="noreferrer">异步可迭代的</a>，这回也是为什么我们可以使用 <code>for-await-of</code> 循环迭代行。</p><p>如果你对文本行不感兴趣，则我们可以不使用 <code>ChunksToLinesStream</code>，对 <code>webReadableStream</code> 迭代，得到任意长度的块。</p><p>更多信息L:</p><ul><li>web流在 <a href="https://2ality.com/2022/06/web-streams-nodejs.html#example%3A-transforming-a-stream-of-arbitrary-chunks-to-a-stream-of-lines" target="_blank" rel="noreferrer">Using web streams on Node.js</a> 已介绍</li><li>行分割符在上面也介绍了</li></ul><p>这种方式优点和缺点（对比 读取单一字符串）：</p><ul><li>😋优点：对大文件效果好 - 我们可以逐渐处理数据，一小块一小块的，不需等待将数据完全读取到内存中</li><li>😥缺点：很复杂，不是同步的</li></ul><h3 id="_2-3-单一字符串同步写入文件" tabindex="-1">2.3 单一字符串同步写入文件 <a class="header-anchor" href="#_2-3-单一字符串同步写入文件" aria-label="Permalink to &quot;2.3 单一字符串同步写入文件&quot;">​</a></h3><p><a href="https://nodejs.org/api/fs.html#fswritefilesyncfile-data-options" target="_blank" rel="noreferrer">fs.writeFileSync(filePath, str, options?)</a> 将 <code>str</code> 写入到 <code>filePath</code> 处的文件中。如果该文件已经存在，则会覆写。</p><p>🌰：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">as</span><span style="color:#A6ACCD;"> fs </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">node:fs</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">fs</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">writeFileSync</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">new-file.txt</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">First line</span><span style="color:#A6ACCD;">\\n</span><span style="color:#C3E88D;">Second line</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">encoding</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">utf-8</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div><p>优缺点（对比流方式）：</p><ul><li>😋优点：使用简单，同步。使用大多数场景</li><li>😥缺点：不适用于大文件</li></ul><h3 id="_2-4-追加字符串到文件中-同步的" tabindex="-1">2.4 追加字符串到文件中（同步的） <a class="header-anchor" href="#_2-4-追加字符串到文件中-同步的" aria-label="Permalink to &quot;2.4 追加字符串到文件中（同步的）&quot;">​</a></h3><p>下面代码追加文本到已经存在的文件中：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight has-highlighted-lines"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">as</span><span style="color:#A6ACCD;"> fs </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">node:fs</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">fs</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">writeFileSync</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">new-file.txt</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Append line</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">encoding</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">utf-8</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">flag</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">a</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">// 🚨 注意这里的 \`flag\`</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div><p>📚这里的代码几乎和上面相同。唯一的区别在于，添加了 <code>.flag</code> 配置： <code>&#39;a&#39;</code> 表示追加数据。其余可能的配置值（比如，文件不存在抛出错误）可参考 <a href="https://nodejs.org/api/fs.html#fswritefilesyncfile-data-options" target="_blank" rel="noreferrer">fs.WriteFileSync-data-options</a></p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>🚨 在某些函数中，这个配置项名为 <code>.flag</code>，而有一些又是 <code>.flags</code>。</p></div><h3 id="_2-5-使用流写入多个字符串到文件中" tabindex="-1">2.5 使用流写入多个字符串到文件中 <a class="header-anchor" href="#_2-5-使用流写入多个字符串到文件中" aria-label="Permalink to &quot;2.5 使用流写入多个字符串到文件中&quot;">​</a></h3><p>🌰下面代码使用流写入多个字符串到文件中：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight has-highlighted-lines"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">as</span><span style="color:#A6ACCD;"> fs </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">node:fs</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Writable</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">node:stream</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> nodeWritable </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> fs</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">createWriteStream</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">new-file.txt</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">encoding</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">utf-8</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span></span>
<span class="line highlighted"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> webWritableStream </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Writable</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toWeb</span><span style="color:#A6ACCD;">(nodeWritable)</span></span>
<span class="line"></span>
<span class="line highlighted"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> writer </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> webWritableStream</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getWriter</span><span style="color:#A6ACCD;">()</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">try</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line highlighted"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">writer</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">write</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">First line</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span></span>
<span class="line highlighted"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">writer</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">write</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Second line</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span></span>
<span class="line highlighted"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">writer</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">close</span><span style="color:#F07178;">()</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">finally</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line highlighted"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">writer</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">releaseLock</span><span style="color:#F07178;">()</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>🚀🚀我们使用了下面函数：</p><ul><li><a href="https://nodejs.org/api/fs.html#fscreatewritestreampath-options" target="_blank" rel="noreferrer">fs.createWriteStream(path, options?)</a> 创建Node流（<code>stream.Writable</code> 实例）</li><li><a href="https://nodejs.org/api/stream.html#streamwritabletowebstreamwritable" target="_blank" rel="noreferrer">stream.Writable.toWeb(streamWritable)</a> 将Node可写流转换为web流（<code>WritableStream</code> 实例）</li></ul><p>更多信息：</p><ul><li>WritableStream &amp; Writers 在 <a href="https://2ality.com/2022/06/web-streams-nodejs.html" target="_blank" rel="noreferrer">Using web streams On Node.js</a> 中已经介绍</li><li>行分割符在上面也介绍了</li></ul><p>优缺点（对比写入单一字符串）：</p><ul><li>😋优点：适用于大文件，因为数据是以小块小块逐步写入的</li><li>😥缺点：很复杂，不是同步的方式</li></ul><h3 id="_2-6-通过流追加多个字符串到文件中-异步的" tabindex="-1">2.6 通过流追加多个字符串到文件中（异步的） <a class="header-anchor" href="#_2-6-通过流追加多个字符串到文件中-异步的" aria-label="Permalink to &quot;2.6 通过流追加多个字符串到文件中（异步的）&quot;">​</a></h3><p>下面使用流追加文本到已存在文件中：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight has-highlighted-lines"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">as</span><span style="color:#A6ACCD;"> fs </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">node:fs</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Writable</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">node:stream</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> nodeWritable </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> fs</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">createWriteStream</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">existing-file.txt</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">encoding</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">utf-8</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">flags</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">a</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 🚨 注意这里是 \`flags\` 而不是 \`flag\`</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> webWritableStream </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Writable</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toWeb</span><span style="color:#A6ACCD;">(nodeWritable)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> writer </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> webWritableStream</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getWriter</span><span style="color:#A6ACCD;">()</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">try</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">writer</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">write</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">First appended line</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">writer</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">write</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Second appended line</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">writer</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">close</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">finally</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">writer</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">releaseLock</span><span style="color:#F07178;">()</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>这个代码和上面几乎一样。唯一区别在于我们添加了 <code>.flags</code> 配置项：值为 <code>a</code>，其余可能的配置值（比如，文件不存在抛出错误）可参考 <a href="https://nodejs.org/api/fs.html#fswritefilesyncfile-data-options" target="_blank" rel="noreferrer">fs.WriteFileSync-data-options</a></p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>🚨 在某些函数中，这个配置项名为 <code>.flag</code>，而有一些又是 <code>.flags</code>。</p></div><h2 id="_3️⃣-跨平台处理行分隔符" tabindex="-1">3️⃣ 跨平台处理行分隔符 <a class="header-anchor" href="#_3️⃣-跨平台处理行分隔符" aria-label="Permalink to &quot;3️⃣ 跨平台处理行分隔符&quot;">​</a></h2><p>👩‍🏫不是所有的平台的行分隔符（EOL）都是相同的：</p><ul><li>在Windows中，EOL是 <code>\\r\\n</code></li><li>在Unix中，EOL是 <code>\\n</code></li></ul><p>想要跨平台处理EOL，可以使用下面几种策略。</p><h3 id="_3-1-读取行分隔符" tabindex="-1">3.1 读取行分隔符 <a class="header-anchor" href="#_3-1-读取行分隔符" aria-label="Permalink to &quot;3.1 读取行分隔符&quot;">​</a></h3><p>当读取文本时，最好识别2个平台的EOLs。</p><p>当将文本分成行时，会是什么样子？我们可以将eol(以任何一种格式)包括在最后。如果我们修改这些行并将它们写入文件，这使我们能够尽可能少地更改。</p><p>当处理包含EOLs行时，有时移除它们也很有用 - 比如：通过下面函数：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> RE_EOL_REMOVE </span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">/</span><span style="color:#C3E88D;">\\r</span><span style="color:#89DDFF;">?</span><span style="color:#C3E88D;">\\n</span><span style="color:#89DDFF;font-style:italic;">$</span><span style="color:#89DDFF;">/</span></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">removeEol</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">line</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">match</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">RE_EOL_REMOVE</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">exec</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">line</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#89DDFF;">!</span><span style="color:#A6ACCD;">match</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">line</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">line</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">slice</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">match</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">index</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">assert</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">equal</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">removeEol</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Windows EOL</span><span style="color:#A6ACCD;">\\r\\n</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Windows EOL</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">assert</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">equal</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">removeEol</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Unix EOL</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Unix EOL</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">assert</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">equal</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">removeEol</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">No EOL</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">No EOL</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div><h3 id="_3-2-写行分割符" tabindex="-1">3.2 写行分割符 <a class="header-anchor" href="#_3-2-写行分割符" aria-label="Permalink to &quot;3.2 写行分割符&quot;">​</a></h3><p>当碰到写入行分隔符时，我们有2种方法：</p><ul><li><a href="https://nodejs.org/api/os.html#oseol" target="_blank" rel="noreferrer">&#39;node:os&#39;模块包含常量EOL</a> 表示当前平台的EOL</li><li>我们可以检测输入文件的EOL格式，然后在改变该文件时，使用该EOL</li></ul><h2 id="_4️⃣-⭐-遍历和创建目录" tabindex="-1">4️⃣ ⭐ 遍历和创建目录 <a class="header-anchor" href="#_4️⃣-⭐-遍历和创建目录" aria-label="Permalink to &quot;4️⃣ ⭐ 遍历和创建目录&quot;">​</a></h2><h3 id="_4-1-遍历一个目录" tabindex="-1">4.1 遍历一个目录 <a class="header-anchor" href="#_4-1-遍历一个目录" aria-label="Permalink to &quot;4.1 遍历一个目录&quot;">​</a></h3><p>下面函数遍历目录，并列举其所有后代（子元素，及子元素的子元素）：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">as</span><span style="color:#A6ACCD;"> path </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">node:path</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">as</span><span style="color:#A6ACCD;"> fs </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">node:fs</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">traverseDirectory</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">dirPath</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">dirEntries</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">fs</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">readdirSync</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">dirPath</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">withFileType</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 对条目进行排序，以保持目录更有调理性</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">dirEntries</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">sort</span><span style="color:#F07178;">(</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">a</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;font-style:italic;">b</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">a</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">name</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">localeCompare</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">b</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">name</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">en</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">  )</span></span>
<span class="line"><span style="color:#F07178;">  </span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#F07178;"> (</span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">dirEntry</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">of</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">dirEntries</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">fileName</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">dirEntry</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">name</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">pathName</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">path</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">join</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">dirPath</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">fileName</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">yield</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">pathName</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">dirEntry</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">isDirectory</span><span style="color:#F07178;">()) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;font-style:italic;">yield</span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">traverseDirectory</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">pathName</span><span style="color:#F07178;">) </span><span style="color:#676E95;font-style:italic;">// 💡 递归</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>上面函数使用了如下函数：</p><ul><li><a href="https://nodejs.org/api/fs.html#fsreaddirsyncpath-options" target="_blank" rel="noreferrer">fs.readdirSync(thePath, options?)</a> 返回 <code>thePath</code> 路径下的子元素 <ul><li>如果配置 <code>withFileTypes: true</code>，函数返回 <code>目录条目（directory entries）</code>，一个 <a href="https://nodejs.org/api/fs.html#class-fsdirent" target="_blank" rel="noreferrer">fs.Dirent</a> 实例。它有如下属性： <ul><li>dirent.name</li><li>dirent.isDirectory()</li><li>dirent.isFile()</li><li>dirent.isSymbolicLink()</li></ul></li><li>如果 <code>withFileTypes: false</code> 或乜有提供，函数返回文件名的字符串</li></ul></li></ul><p>实战🌰：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#A6ACCD;"> (</span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> filePath </span><span style="color:#89DDFF;">of</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">traverseDirectory</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">dir</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">filePath</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 输出</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// &#39;dir/dir-file.txt&#39;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// &#39;dir/subdir&#39;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// &#39;dir/subdir/subdir-file1.txt&#39;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// &#39;dir/subdir/subdir-file2.csv&#39;</span></span>
<span class="line"></span></code></pre></div><h3 id="_4-2-创建目录-mkdir-mkdir-p" tabindex="-1">4.2 创建目录（mkdir, mkdir -p） <a class="header-anchor" href="#_4-2-创建目录-mkdir-mkdir-p" aria-label="Permalink to &quot;4.2 创建目录（mkdir, mkdir -p）&quot;">​</a></h3><p>📒 我们可以使用下面函数创建目录：<a href="https://nodejs.org/api/fs.html#fsmkdirsyncpath-options" target="_blank" rel="noreferrer">fs.mkdirSync</a></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">fs</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">mkdirSync</span><span style="color:#A6ACCD;">(thePath</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> options</span><span style="color:#89DDFF;">?</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div><p><code>options.recursive</code> 决定函数如果创建 <code>thePath</code> 目录：</p><ul><li>如果 <code>recursive: false</code> 或不提供，<code>mkdirSync()</code> 对如下2种情况返回undeinfed或者抛出异常： <ul><li><code>thePath</code> 处目录（或文件）已经存在</li><li><code>thePath</code> 的父目录不存在</li></ul></li><li>如果 <code>recursive: true</code>: <ul><li>即使 <code>thePath</code> 处目录已经存在也没问题</li><li><code>thePath</code> 的祖先目录在需要时被创建😎</li><li><code>mkdirSync()</code> 返回第一个最新创建的目录的路径</li></ul></li></ul><p>实战🌰：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight has-highlighted-lines"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">as</span><span style="color:#A6ACCD;"> fs </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">node:fs</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">assert</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">deepEqual</span><span style="color:#A6ACCD;">(</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">  Array</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">from</span><span style="color:#A6ACCD;">(</span><span style="color:#82AAFF;">traverseDirectory</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">.</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">))</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 遍历当前目录的目录 查看4.1节</span></span>
<span class="line"><span style="color:#A6ACCD;">  [</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">dir</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">  ]</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line highlighted"><span style="color:#A6ACCD;">fs</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">mkdirSync</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">dir/sub/subsub</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">recursive</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">assert</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">deepEqual</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">  Array</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">from</span><span style="color:#A6ACCD;">(</span><span style="color:#82AAFF;">traverseDirectory</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">.</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">))</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">  [</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">dir</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">dir/sub</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">dir/sub/subsub</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">  ]</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div><h3 id="_4-3-确保父目录存在" tabindex="-1">4.3 确保父目录存在 <a class="header-anchor" href="#_4-3-确保父目录存在" aria-label="Permalink to &quot;4.3 确保父目录存在&quot;">​</a></h3><p>如果我们想按需设置一个嵌套的文件结构，<strong>当我们创建一个新文件时，我们不缺确认祖先目录是否存在😅</strong>。下面函数可以帮助我们解决这个问题：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight has-highlighted-lines"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">as</span><span style="color:#A6ACCD;"> path </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">node:path</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">as</span><span style="color:#A6ACCD;"> fs </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">node:fs</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">ensureParentDirectory</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">filePath</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">parentDir</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">path</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">dirname</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">filePath</span><span style="color:#F07178;">)</span></span>
<span class="line highlighted"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#89DDFF;">!</span><span style="color:#A6ACCD;">fs</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">existsSync</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">parentDir</span><span style="color:#F07178;">)) </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">// 判断是否存在父目录</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">fs</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">mkdirSync</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">parentDir</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">recursive</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>实战🌰：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight has-highlighted-lines"><code><span class="line"><span style="color:#A6ACCD;">assert</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">deepEqual</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">  Array</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">from</span><span style="color:#A6ACCD;">(</span><span style="color:#82AAFF;">traverseDirectory</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">.</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">))</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  [</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">dir</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">  ]</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line highlighted"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> filePath </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">dir/sub/subsub/new-file.txt</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line highlighted"><span style="color:#82AAFF;">ensureParentDirectory</span><span style="color:#A6ACCD;">(filePath) </span><span style="color:#676E95;font-style:italic;">// A</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">fs</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">writeFileSync</span><span style="color:#A6ACCD;">(filePath</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">content</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">encoding</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">utf-8</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">assert</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">deepEqual</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">  Array</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">from</span><span style="color:#A6ACCD;">(</span><span style="color:#82AAFF;">traverseDirectory</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">.</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">))</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  [</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">dir</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">dir/sub</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">dir/sub/subsub</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">dir/sub/subsub/new-file.txt</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">  ]</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div><h3 id="_4-4-创建临时目录" tabindex="-1">4.4 创建临时目录 <a class="header-anchor" href="#_4-4-创建临时目录" aria-label="Permalink to &quot;4.4 创建临时目录&quot;">​</a></h3><p>📒 <a href="https://nodejs.org/api/fs.html#fsmkdtempsyncprefix-options" target="_blank" rel="noreferrer">fs.mktempSync(pathPrefix, options?)</a> 创建临时目录：它会添加6个随机字符给 <code>pathPrefix</code>，在新的路径创建目录，并返回该路径。</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p><code>pathPrefix</code> 不能以大写 <code>X</code> 结尾，因为某些平台会将尾部的 <code>X</code>s 用随机字符替换。</p></div><p>如果我们想在操作系统特定的全局临时目录创建临时目录，我们可以使用 <a href="https://nodejs.org/api/os.html#ostmpdir" target="_blank" rel="noreferrer">os.tmpdir()</a> 函数：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight has-highlighted-lines"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">as</span><span style="color:#A6ACCD;"> os </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">node:os</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">as</span><span style="color:#A6ACCD;"> path </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">node:path</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">as</span><span style="color:#A6ACCD;"> fs </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">node:fs</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line highlighted"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> pathPrefix </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> path</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">resolve</span><span style="color:#A6ACCD;">(os</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">tmpdir</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">my-app</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// 路径前缀</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// e.g. &#39;/var/folders/ph/sz0384m11vxf/T/my-app&#39;</span></span>
<span class="line"></span>
<span class="line highlighted"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> tempPath </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> fs</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">mktempSync</span><span style="color:#A6ACCD;">(pathPrefix) </span><span style="color:#676E95;font-style:italic;">// 随机给前缀添加6个随机字符</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// e.g. &#39;/var/folders/ph/sz0384m11vxf/T/my-app1QXOXP&#39;</span></span>
<span class="line"></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>💡 临时目录不会随着Node脚本的结束而自动被移除。要么我们自己删除它，要么依赖操作系统间歇性的清理全局临时目录（也有可能不被移除）</p></div><h2 id="_5️⃣-拷贝-重命名-移动文件或者目录" tabindex="-1">5️⃣ 拷贝，重命名，移动文件或者目录 <a class="header-anchor" href="#_5️⃣-拷贝-重命名-移动文件或者目录" aria-label="Permalink to &quot;5️⃣ 拷贝，重命名，移动文件或者目录&quot;">​</a></h2><h3 id="_5-1-拷贝文件或目录" tabindex="-1">5.1 拷贝文件或目录 <a class="header-anchor" href="#_5-1-拷贝文件或目录" aria-label="Permalink to &quot;5.1 拷贝文件或目录&quot;">​</a></h3><p>📒 <a href="https://nodejs.org/api/fs.html#fscpsyncsrc-dest-options" target="_blank" rel="noreferrer">fs.cpSync(srcPath, destPath, options?)</a>：从 <code>srcPath</code> 处拷贝文件或目录到 <code>desPath</code>。有趣配置：</p><ul><li><code>recursive</code> (默认 <code>false</code>)：只有这个配置为 <code>true</code> 时，目录（包含空目录）才会被拷贝</li><li><code>force</code> (默认 <code>true</code>)：如果为 <code>true</code>，已存在的文件将被覆写。如果 <code>false</code>，已经存在的文件会被保存： <ul><li><code>force: false</code> 时，设置 <code>errorOnExist: true</code> 时，如果存在文件路径冲突，会抛出错误</li></ul></li><li><code>filter</code> 是一个函数，允许我们控制哪些文件被拷贝😎</li><li><code>preserveTimestamps</code> (默认 <code>false</code>)：如果 <code>true</code>，被拷贝到 <code>destPath</code> 的文件或目录保持和来源 <code>srcPath</code> 一样的时间戳</li></ul><p>实战🌰：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight has-highlighted-lines"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">as</span><span style="color:#A6ACCD;"> fs </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">node:fs</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">assert</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">deepEqual</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">  Array</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">from</span><span style="color:#A6ACCD;">(</span><span style="color:#82AAFF;">traverseDirectory</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">.</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">))</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  [</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">dir-orig</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">dir-orig/some-filex.txt</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">  ]</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line highlighted"><span style="color:#A6ACCD;">fs</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">cpSync</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">dir-orig</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">dir-copy</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">recursive</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">assert</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">deepEqual</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">  Array</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">from</span><span style="color:#A6ACCD;">(</span><span style="color:#82AAFF;">traverseDirectory</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">.</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">))</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  [</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">dir-copy</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">dir-copy/some-file.txt</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">dir-orig</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">dir-orig/some-filex.txt</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">  ]</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div><h3 id="_5-2-重命名或移动文件或文件夹" tabindex="-1">5.2 重命名或移动文件或文件夹 <a class="header-anchor" href="#_5-2-重命名或移动文件或文件夹" aria-label="Permalink to &quot;5.2 重命名或移动文件或文件夹&quot;">​</a></h3><p>📒 <a href="https://nodejs.org/api/fs.html#fsrenamesyncoldpath-newpath" target="_blank" rel="noreferrer">fs.renameSync(oldPath, newPath)</a> 将 <code>oldPath</code> 重命名或移动文件或目录到 <code>newPath</code>。</p><p>🌰重命名一个目录：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight has-highlighted-lines"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">as</span><span style="color:#A6ACCD;"> fs </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">node:fs</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">assert</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">deepEqual</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">  Array</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">from</span><span style="color:#A6ACCD;">(</span><span style="color:#82AAFF;">traverseDirectory</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">.</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">))</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  [</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">old-dir-name</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">old-dir-name/some-file-txt</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">  ]</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line highlighted"><span style="color:#A6ACCD;">fs</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">renameSync</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">old-dir-name</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">new-dir-name</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// 重命名效果</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">assert</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">deepEqual</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">  Array</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">from</span><span style="color:#A6ACCD;">(</span><span style="color:#82AAFF;">traverseDirectory</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">.</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">))</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  [</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">new-dir-name</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">new-dir-name/some-file-txt</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">  ]</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div><p>🌰移动文件：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight has-highlighted-lines"><code><span class="line"><span style="color:#A6ACCD;">assert</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">deepEqual</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">  Array</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">from</span><span style="color:#A6ACCD;">(</span><span style="color:#82AAFF;">traverseDirectory</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">.</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">))</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  [</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">dir</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">dir/subdir</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">dir/subdir/some-file.txt</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">  ]</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line highlighted"><span style="color:#A6ACCD;">fs</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">renameSync</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">dir/subdir/some-file.txt</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">some-file.txt</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// 移动效果</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">assert</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">deepEqual</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">  Array</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">from</span><span style="color:#A6ACCD;">(</span><span style="color:#82AAFF;">traverseDirectory</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">.</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">))</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  [</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">dir</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">dir/subdir</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">some-file.txt</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">  ]</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div><h2 id="_6️⃣-移除文件或目录" tabindex="-1">6️⃣ 移除文件或目录 <a class="header-anchor" href="#_6️⃣-移除文件或目录" aria-label="Permalink to &quot;6️⃣ 移除文件或目录&quot;">​</a></h2><h3 id="_6-1-移除文件和任意目录-shell-rm-rm-r" tabindex="-1">6.1 移除文件和任意目录（shell: rm, rm -r） <a class="header-anchor" href="#_6-1-移除文件和任意目录-shell-rm-rm-r" aria-label="Permalink to &quot;6.1 移除文件和任意目录（shell: rm, rm -r）&quot;">​</a></h3><p>📒 <a href="https://nodejs.org/api/fs.html#fsrmsyncpath-options" target="_blank" rel="noreferrer">fs.rmSync(thePath, options?)</a> 移除 <code>thePath</code> 处的文件或目录。有趣的配置项：</p><ul><li><code>recursive</code> (默认 <code>false</code>)： 只有这个配置为 <code>true</code> 时，目录（包括空目录）才会被移除</li><li><code>force</code> (默认 <code>false</code>)：如果为 <code>false</code>，当 <code>thePath</code> 不存在该文件或目录时，会抛出异常</li></ul><p>🌰移除文件：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight has-highlighted-lines"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">as</span><span style="color:#A6ACCD;"> fs </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">node:fs</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">assert</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">deepEqual</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">  Array</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">from</span><span style="color:#A6ACCD;">(</span><span style="color:#82AAFF;">traverseDirectory</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">.</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">))</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  [</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">dir</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">dir/some-file.txt</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  ]</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line highlighted"><span style="color:#A6ACCD;">fs</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">rmSync</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">dir/some-file.txt</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">assert</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">deepEqual</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">  Array</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">from</span><span style="color:#A6ACCD;">(</span><span style="color:#82AAFF;">traverseDirectory</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">.</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">))</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  [</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">dir</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  ]</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div><p>🌰 使用 <code>fs.rmSync()</code> 递归移除非空目录：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight has-highlighted-lines"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">as</span><span style="color:#A6ACCD;"> fs </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">node:fs</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">assert</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">deepEqual</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">  Array</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">from</span><span style="color:#A6ACCD;">(</span><span style="color:#82AAFF;">traverseDirectory</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">.</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">))</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  [</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">dir</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">dir/subdir</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">dir/subdir/some-file.txt</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  ]</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line highlighted"><span style="color:#A6ACCD;">fs</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">rmSync</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">dir/subdir</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">recursive</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// 递归移除子目录及其文件</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">assert</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">deepEqual</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">  Array</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">from</span><span style="color:#A6ACCD;">(</span><span style="color:#82AAFF;">traverseDirectory</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">.</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">))</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  [</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">dir</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  ]</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div><h3 id="_6-2-移除空目录-shell-rmdir" tabindex="-1">6.2 移除空目录（shell: rmdir） <a class="header-anchor" href="#_6-2-移除空目录-shell-rmdir" aria-label="Permalink to &quot;6.2 移除空目录（shell: rmdir）&quot;">​</a></h3><p>📒 <a href="https://nodejs.org/api/fs.html#fsrmdirsyncpath-options" target="_blank" rel="noreferrer">fs.rmdirSync(thePath, options?)</a> 移除空目录（如果目录不为空，则抛出异常）。</p><p>🌰：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight has-highlighted-lines"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">as</span><span style="color:#A6ACCD;"> fs </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">node:fs</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">assert</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">deepEqual</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">  Array</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">from</span><span style="color:#A6ACCD;">(</span><span style="color:#82AAFF;">traverseDirectory</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">.</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">))</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  [</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">dir</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">dir/subdir</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  ]</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line highlighted"><span style="color:#A6ACCD;">fs</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">rmdirSync</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">dir/subdir</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// 移除空目录</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">assert</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">deepEqual</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">  Array</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">from</span><span style="color:#A6ACCD;">(</span><span style="color:#82AAFF;">traverseDirectory</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">.</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">))</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  [</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">dir</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  ]</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div><h3 id="_6-3-清空目录" tabindex="-1">6.3 清空目录 <a class="header-anchor" href="#_6-3-清空目录" aria-label="Permalink to &quot;6.3 清空目录&quot;">​</a></h3><p>一个脚本保存其输出到目录 <code>dir</code>，通常需要在开始前先 <code>清空目录（clear dir）</code>：清空 <code>dir</code> 下所有文件，下面函数帮助我们完成这一需求：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">as</span><span style="color:#A6ACCD;"> path </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">node:path</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">as</span><span style="color:#A6ACCD;"> fs </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">node:fs</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">clearDirectory</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">dirPath</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#F07178;"> (</span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">fileName</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">of</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">fs</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">readdirSync</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">dirPath</span><span style="color:#F07178;">)) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">pathName</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">path</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">join</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">dirPath</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">fileName</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">fs</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">rmSync</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">pathName</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">recursive</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>这里使用到了2个fs函数：</p><ol><li><code>fs.readdirSync(dirPath)</code> 返回 <code>dirPath</code> 目录中所有子元素的名字。可参考上面的 <code>4.1</code> 节</li><li><code>fs.rmSync(pathName, options?)</code> 移除文件和目录（包括空目录）。可参考上面的 <code>6.1</code> 节</li></ol><p>🌰：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight has-highlighted-lines"><code><span class="line"><span style="color:#A6ACCD;">assert</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">deepEqual</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">  Array</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">from</span><span style="color:#A6ACCD;">(</span><span style="color:#82AAFF;">traverseDirectory</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">.</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">))</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  [</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">dir</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">dir/dir-file.txt</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 下面都是&#39;dir&#39;目录中的文件或子目录</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">dir/subdir</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">dir/subdir/subdir-file.txt</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">  ]</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line highlighted"><span style="color:#82AAFF;">clearDirectory</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">dir</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">assert</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">deepEqual</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">  Array</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">from</span><span style="color:#A6ACCD;">(</span><span style="color:#82AAFF;">traverseDirectory</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">.</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">))</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  [</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">dir</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  ]</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div><h3 id="_6-4-trash库" tabindex="-1">6.4 trash库 <a class="header-anchor" href="#_6-4-trash库" aria-label="Permalink to &quot;6.4 trash库&quot;">​</a></h3><p><a href="https://github.com/sindresorhus/trash" target="_blank" rel="noreferrer">trash库</a> 将文件和文件夹移到垃圾桶。跨平台。例子:</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> trash </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">trash</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">trash</span><span style="color:#A6ACCD;">([</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">*.png</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">!rainbow.png</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">])</span></span>
<span class="line"></span></code></pre></div><p><code>trash()</code> 第一个参数接收字符串数组或者字符串。任何字符串都可以是 <code>glob</code> 模式。</p><h2 id="_7️⃣-读和改变文件系统条目" tabindex="-1">7️⃣ 读和改变文件系统条目 <a class="header-anchor" href="#_7️⃣-读和改变文件系统条目" aria-label="Permalink to &quot;7️⃣ 读和改变文件系统条目&quot;">​</a></h2><h3 id="_7-1-⭐-检测文件或目录是否存在" tabindex="-1">7.1 ⭐ 检测文件或目录是否存在 <a class="header-anchor" href="#_7-1-⭐-检测文件或目录是否存在" aria-label="Permalink to &quot;7.1 ⭐ 检测文件或目录是否存在&quot;">​</a></h3><p>📒 <a href="https://nodejs.org/api/fs.html#fsexistssyncpath" target="_blank" rel="noreferrer">fs.existsSync(thePath)</a> 检测 <code>thePath</code> 路径的文件或目录是否存在。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight has-highlighted-lines"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">as</span><span style="color:#A6ACCD;"> fs </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">node:fs</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">assert</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">deepEqual</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">  Array</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">from</span><span style="color:#A6ACCD;">(</span><span style="color:#82AAFF;">traverseDirectory</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">.</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">))</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  [</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">dir</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">dir/some-file.txt</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">  ]</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">assert</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">equal</span><span style="color:#A6ACCD;">(</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">  fs</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">existsSync</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">dir</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 目录是否存在</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FF9CAC;">true</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">assert</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">equal</span><span style="color:#A6ACCD;">(</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">  fs</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">existsSync</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">dir/some-file.txt</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 文件是否存在</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FF9CAC;">true</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">assert</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">equal</span><span style="color:#A6ACCD;">(</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">  fs</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">existsSync</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">dir/non-existent-file.txt</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FF9CAC;">false</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div><h3 id="_7-2-检测文件stats-是否是路径-创建时间-等" tabindex="-1">7.2 检测文件stats：是否是路径？创建时间？等 <a class="header-anchor" href="#_7-2-检测文件stats-是否是路径-创建时间-等" aria-label="Permalink to &quot;7.2 检测文件stats：是否是路径？创建时间？等&quot;">​</a></h3><p>📒 <a href="https://nodejs.org/api/fs.html#fsstatsyncpath-options" target="_blank" rel="noreferrer">fs.statSync(thePath, options?)</a> 返回一个 <code>fs.Stats</code> 实例，包含 <code>thePath</code> 文件或目录信息。</p><p>有趣配置：</p><ul><li><code>throwIfNoEntry</code> (默认： true)：如果给定路径不存在实体会发生什么？ <ul><li><code>throwIfNoEntry: true</code> : 抛出异常</li><li><code>throwIfNoEntry: false</code>: 返回undefined</li></ul></li><li><code>bigint</code> (默认： false): 如果为 <code>true</code>，函数使用bigints表示数值类型值，比如时间戳。</li></ul><p><a href="https://nodejs.org/api/fs.html#class-fsstats" target="_blank" rel="noreferrer">fs.Stats</a> 实例属性：</p><ul><li>什么类型的文件系统条目？ <ul><li><code>stats.isFile()</code></li><li><code>stats.isDirectory()</code></li><li><code>stats.isSymbolicLink()</code></li></ul></li><li><code>stats.size</code> 字节尺寸</li><li>时间戳（<code>Timestamps</code>）: <ul><li>3种类型时间戳 <ul><li><code>stats.atime</code>: 最后访问时间</li><li><code>stats.mtime</code>: 最后修改时间</li><li><code>stats.birthtime</code>: 创建时间</li></ul></li><li>每个时间戳都可以指定3种不同的单位 - 以 <code>atime</code> 为例 <ul><li><code>stats.atime</code>: <code>Date</code> 实例</li><li><code>stats.atimeMS</code>: ms (POSIX Epoch开始)</li><li><code>stats.atimeNs</code>: ns (POSIX Epoch开始，需要开启 <code>bigints</code> 配置)</li></ul></li></ul></li></ul><p>下面用 <code>fs.statSync()</code> 属性 <code>isDirectory()</code> 函数：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">as</span><span style="color:#A6ACCD;"> fs </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">node:fs</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">isDirectory</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">thePath</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">stats</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">fs</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">statSync</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">thePath</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">throwIfNoEntry</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">false</span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">stats</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">!==</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">undefined</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">stats</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">isDirectoru</span><span style="color:#F07178;">()</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">assert</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">deepEqual</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">  Array</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">from</span><span style="color:#A6ACCD;">(</span><span style="color:#82AAFF;">traverseDirectory</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">.</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">))</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  [</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">dir</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">dir/some-file.txt</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  ]</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">assert</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">equal</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">isDirectory</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">dir</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">assert</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">equal</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">isDirectory</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">dir/some-file.txt</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">false</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">assert</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">equal</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">isDirectory</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">non-existent-dir</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">false</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div><h3 id="_7-3-改变文件特性-权限-拥有者-组-时间戳" tabindex="-1">7.3 改变文件特性：权限，拥有者，组，时间戳 <a class="header-anchor" href="#_7-3-改变文件特性-权限-拥有者-组-时间戳" aria-label="Permalink to &quot;7.3 改变文件特性：权限，拥有者，组，时间戳&quot;">​</a></h3><p>下面函数用于改变文件特性：</p><ol><li><a href="https://nodejs.org/api/fs.html#fschmodsyncpath-mode" target="_blank" rel="noreferrer">fs.chmodSync(path, mode)</a> 改变文件权限（<code>permission</code>）</li><li><a href="https://nodejs.org/api/fs.html#fschownsyncpath-uid-gid" target="_blank" rel="noreferrer">fs.chownSync(path, uid, gid)</a> 改变文件拥有者（<code>owner</code>） 和 组（<code>group</code>）</li><li><a href="https://nodejs.org/api/fs.html#fsutimessyncpath-atime-mtime" target="_blank" rel="noreferrer">fs.utimeSync(path, atime, mtime)</a> 改变文件时间戳 <ul><li><code>atime</code>: 最近一次访问时间</li><li><code>mtime</code>: 最近一次修改时间</li></ul></li></ol><h2 id="_8️⃣-操作链接-links" tabindex="-1">8️⃣ 操作链接（Links） <a class="header-anchor" href="#_8️⃣-操作链接-links" aria-label="Permalink to &quot;8️⃣ 操作链接（Links）&quot;">​</a></h2><p>👩‍🏫操作硬链接（<code>hard links</code>）的函数：</p><ul><li><a href="https://nodejs.org/api/fs.html#fslinksyncexistingpath-newpath" target="_blank" rel="noreferrer">fs.linkSync(existingPath, newPath)</a> 创建一个硬链接</li><li><a href="https://nodejs.org/api/fs.html#fsunlinksyncpath" target="_blank" rel="noreferrer">fs.unlinkSync(path)</a> 移除硬链接，并可能性的移除硬链接指向的文件（如果移除的是最后一个指向该文件的硬链接）</li></ul><p>操作符号链接（<code>symbolic links</code>） 的函数：</p><ul><li><a href="https://nodejs.org/api/fs.html#fssymlinksynctarget-path-type" target="_blank" rel="noreferrer">fs.symlinkSync(target, path, type?)</a> 创建从 <code>path</code> 到 <code>target</code> 的符号链接</li><li><a href="https://nodejs.org/api/fs.html#fsreadlinksyncpath-options" target="_blank" rel="noreferrer">fs.readlinkSync(path, options?)</a> 获取 <code>path</code> 处的目标符号链接</li></ul><p>下面函数用于操作符号链接，并且不会解除对符号链接的引用（注意前缀为 <code>l</code> 🤩）:</p><ul><li><a href="https://nodejs.org/api/fs.html#fslchmodsyncpath-mode" target="_blank" rel="noreferrer">fs.lchmodSync(path, mode)</a> 改变 <code>path</code> 路径的符号链接的权限</li><li><a href="https://nodejs.org/api/fs.html#fslchownsyncpath-uid-gid" target="_blank" rel="noreferrer">fs.lchownSync(path, uid, gid)</a> 改变对应路径符号链接的用户和组</li><li><a href="https://nodejs.org/api/fs.html#fslutimessyncpath-atime-mtime" target="_blank" rel="noreferrer">fs.lutimesSync(path, atime, mtime)</a> 改变对应路径符号链接的时间戳</li><li><a href="https://nodejs.org/api/fs.html#fslstatsyncpath-options" target="_blank" rel="noreferrer">fs.lstatSync(path, options?)</a> 返回对应路径符号链接的统计数据（时间戳等）</li></ul><p>其它有用函数：</p><ul><li><a href="https://nodejs.org/api/fs.html#fsrealpathsyncpath-options" target="_blank" rel="noreferrer">fs.realpathSync(path, options?)</a> 通过解析点(<code>.</code>)、双点(..)和符号链接计算规范路径名</li></ul><p>影响符号链接处理方式的函数：</p><ul><li><a href="https://nodejs.org/api/fs.html#fscpsyncsrc-dest-options" target="_blank" rel="noreferrer">fs.cpSync(src, dest, options?)</a>: <ul><li><code>dereference</code> (默认 <code>false</code>)： 如果为 <code>true</code>，拷贝符号链接指向的we年，而不是符号链接本身😎</li><li><code>verbatimSymlinks</code> (默认 <code>true</code>)： 如果为 <code>false</code>，复制的符号链接的目标将被更新，以便它仍然指向相同的位置。如果为 <code>true</code>，则不会更改目标</li></ul></li></ul><h2 id="_9️⃣-进一步阅读" tabindex="-1">9️⃣ 进一步阅读 <a class="header-anchor" href="#_9️⃣-进一步阅读" aria-label="Permalink to &quot;9️⃣ 进一步阅读&quot;">​</a></h2><ul><li><a href="https://2ality.com/2022/06/web-streams-nodejs.html" target="_blank" rel="noreferrer">Using web streams on Node.js - blog</a></li><li>关于js异步编程的 <code>JavaScript for impatient programmers</code>： <ul><li><a href="https://exploringjs.com/impatient-js/ch_async-js.html" target="_blank" rel="noreferrer">Foundations of asynchronous programming in javascript</a></li><li><a href="https://exploringjs.com/impatient-js/ch_promises.html" target="_blank" rel="noreferrer">Promises for asynchrous programming</a></li><li><a href="https://exploringjs.com/impatient-js/ch_async-functions.html" target="_blank" rel="noreferrer">Async functions</a></li><li><a href="https://exploringjs.com/impatient-js/ch_async-iteration.html" target="_blank" rel="noreferrer">Asynchronous iteration</a></li></ul></li></ul><p>原文链接：</p><ul><li><a href="https://2ality.com/2022/06/nodejs-file-system.html#important-classes" target="_blank" rel="noreferrer">Working with the file system on Node.js - @2ality</a></li></ul><p>2022年08月14日15:01:06</p>`,213),e=[o];function t(r,c,y,D,i,F){return n(),a("div",null,e)}const d=s(p,[["render",t]]);export{C as __pageData,d as default};
