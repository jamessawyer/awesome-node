import{_ as e,c as o,o as t,b as s}from"./app.1032310a.js";const u=JSON.parse('{"title":"模块系统总结","description":"","frontmatter":{"title":"模块系统总结"},"headers":[],"relativePath":"book/patterns/module-system/summary.md","lastUpdated":1676867557000}'),a={name:"book/patterns/module-system/summary.md"},c=s("<p>本章我们深入探索了模块是什么，为什么模块很有用，以及为什么我们需要一个模块系统。同时我们学习了JS模块的历史，以及Node.js中存在的2种模块系统，即 <code>CommonJS</code> &amp; <code>ESM</code>。同时也探索了创建模块或第三方模块时常见的模式。</p><p>你现在应该对如何利用CommonJS和ESM特性，和理解2种模块系统感到成竹在胸。 本书后续的章节，主要依赖ESM，但是你应该可以自己灵活选择不同模块系统，并在必要时知道如何有效的处理CommonJS。</p><p>下一章，我们将探索JS异步编程的思想，将深入了解回调（<code>callbacks</code>），事件（<code>events</code>）和它们设计的模式（<code>patterns</code>）😎。</p><p>2022年10月22日21:53:36</p>",4),d=[c];function _(m,n,r,p,l,i){return t(),o("div",null,d)}const f=e(a,[["render",_]]);export{u as __pageData,f as default};
